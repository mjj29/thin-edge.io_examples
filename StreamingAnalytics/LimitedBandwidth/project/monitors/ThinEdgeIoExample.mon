/*
 * Copyright (c) 2022 Cumulocity GmbH, Duesseldorf, Germany and/or its affiliates and/or their licensors.
 * Use, reproduction, transfer, publication or disclosure is prohibited except as specifically provided for in your License Agreement with Cumulocity GmbH.
 * 
 */
package com.apamax.thinedge.limitedbandwidth;

using com.apama.aggregates.mean;

/**
 * This monitor collates temperature, pressure and vibration
 * measurements, averages them and sends the average of the last 5 seconds
 * to MQTT every 5 seconds.
 */
monitor ThinEdgeIoExample {

    constant float AVG_WINDOW := 5.0;

    float avgTemperature := float.NAN;
    float avgPressure := float.NAN;
    float avgVibration := float.NAN;

    action onload() {
        monitor.subscribe("mqtt:sensors/temperature");
        monitor.subscribe("mqtt:sensors/pressure");
        monitor.subscribe("mqtt:sensors/vibration");

        // Collect sensor measurements and keep the average of the last 5
        // seconds. If there are no measurements for more than five seconds
        // then the value is set to NaN.
        from t in all Temperature()
            within AVG_WINDOW
            select mean(t.temperature) : avgTemperature { }
        from p in all Pressure()
            within AVG_WINDOW
            select mean(p.pressure) : avgPressure { }
        from v in all Vibration()
            within AVG_WINDOW
            select mean(v.vibration) : avgVibration { }

        // Every 5 seconds send out the averaged measurements as a combined
        // measurements event. Will only send if there has been at least one
        // measurement of each type in the last 5 seconds.
        on all wait(AVG_WINDOW) {
            if (avgTemperature.isFinite()
                    and avgPressure.isFinite()
                    and avgVibration.isFinite()) {
                CombinedMeasurement m := CombinedMeasurement(
                    avgTemperature, avgPressure, avgVibration);
                log "Sending " + m.toString()
                    + " to mqtt:te/device/main///m/" at INFO;
                send m to "mqtt:te/device/main///m/";
            }
        }

		// Required so that the application can receive events from connectivity
		// plugins (MQTT in this case). See Apama documentation for more details.
        com.softwareag.connectivity.ConnectivityPlugins.onApplicationInitialized();
    }
}
