# Copyright (c) 2016,2018,2022 Cumulocity GmbH, Duesseldorf, Germany and/or its affiliates and/or their licensors.
# Use, reproduction, transfer, publication or disclosure is prohibited except as specifically provided for in your License Agreement with Cumulocity GmbH.
# This is a YAML configuration file. See the associated .properties file for an 
# easy way to change the most commonly needed configuration settings. 
#
# When editing YAML files, be sure to use spaces (not tabs) for indentation. 
# List entries are denoted by a line beginning with hyphen and space ("- ").
# Map key and value pairs are separated by a colon and new line or space ("key: value").
# Empty strings and those that need escaping should be surrounded by double-quotes ("...").
# Apama replaces ${prop} substitution variables with the configured value of the 
# specified property, taken from the command line or from .properties files. 
#

###########################################################################################
# MQTT connectivity configuration for sending/receiving events to/from an MQTT broker 
#
# Most user-accessible configuration is available and documented in the properties file,
# except for the codecs used to do the EPL <-> binary message translation.
###########################################################################################

connectivityPlugins:
  MQTTTransport:
    libraryName: connectivity-mqtt
    class: MQTTTransport
  classifierCodec:
    libraryName: ClassifierCodec
    class: ClassifierCodec
  jsonCodec:
    libraryName: connectivity-json-codec
    class: JSONCodec
  stringCodec:
    libraryName: connectivity-string-codec
    class: StringCodec
  mapperCodec:
   libraryName: MapperCodec
   class: MapperCodec

# The chain manager, responsible for the connection to MQTT
dynamicChainManagers:
  MQTTManager:
    transport: MQTTTransport
    managerConfig:
      # WARNING: If you are using multiple MQTT bundles, make sure that each chain manager
      # is configured with a distinct prefix to avoid unexpected behaviour
      channelPrefix: "mqtt:"
      brokerURL: ${MQTT_brokerURL}
      certificateAuthorityFile: ${MQTT_certificateAuthorityFile}
      acceptUnrecognizedCertificates: ${MQTT_acceptUnrecognizedCertificates}
      authentication:
        username: ${MQTT_username}
        password: ${MQTT_password}
        certificateFile: ${MQTT_certificateFile}
        certificatePassword: ${MQTT_certificatePassword}
        privateKeyFile: ${MQTT_privateKeyFile}

dynamicChains:
  # This is a sample chain definition showing how to turn a JSON message from MQTT broker to EPL events
  MQTTChain:
    - apama.eventMap:
        suppressLoopback: true
    - mapperCodec:
        allowMissing: false
        com.apamax.thinedge.resourcemonitoring.RawCpuMeasurement:
            towardsHost:
                mapFrom:
                    - payload.cpuMeasurement: payload
        com.apamax.thinedge.resourcemonitoring.RawMemMeasurement:
            towardsHost:
                mapFrom:
                    - payload.memMeasurement: payload
        com.apamax.thinedge.resourcemonitoring.ResourceUsageReport:
            towardsTransport:
                defaultValue:
                    - metadata.contentType: "application/json"
                mapFrom:
                    - payload.cpu.high-use-percent: payload.highCpuPercent
                    - payload.memory.high-use-percent: payload.highMemPercent
    - classifierCodec:
        rules:
          - com.apamax.thinedge.resourcemonitoring.RawCpuMeasurement:
            - regex:metadata.mqtt.topic: /?collectd/thin-edge/cpu/percent-active
          - com.apamax.thinedge.resourcemonitoring.RawMemMeasurement:
            - regex:metadata.mqtt.topic: /?collectd/thin-edge/mem/percent-used
    - jsonCodec:
        filterOnContentType: true
    - stringCodec:
    - MQTTTransport
